---
to: src/components/<%= h.inflection.camelize(name.replace(/\s/g, '_')) %>/index.jsx
---
import {h} from 'hyperapp'

import './style.css'

export const <%= h.inflection.camelize(name.replace(/\s/g, '_')) %> = ({firstName, lastName}) => (state, actions) => (
  <form class="<%= h.inflection.dasherize(name.toLowerCase()) %>" key="<%= h.inflection.dasherize(name.toLowerCase()) %>" method="post" onsubmit={actions.<%= h.inflection.camelize(name.replace(/\s/g, '_'), true) %>.handleSubmit}>
    <h2>Form component with namespaced state</h2>
    <p>Full name: <b>{firstName} {lastName}</b></p>
    <input type="text" name="firstName" placeholder="First name" value={firstName} oninput={ev => actions.<%= h.inflection.camelize(name.replace(/\s/g, '_'), true) %>.set({firstName: ev.target.value})} required /><br/>
    <input type="text" name="lastName" placeholder="Last name" value={lastName} oninput={ev => actions.<%= h.inflection.camelize(name.replace(/\s/g, '_'), true) %>.set({lastName: ev.target.value})} required /><br/>
    <button type="submit">Submit</button>
  </form>
)

/*
import {<%= h.inflection.camelize(name.replace(/\s/g, '_')) %>} from '../components/<%= h.inflection.camelize(name.replace(/\s/g, '_')) %>'
<<%= h.inflection.camelize(name.replace(/\s/g, '_')) %> {...state.<%= h.inflection.camelize(name.replace(/\s/g, '_'), true) %>} />
*/
